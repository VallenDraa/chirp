import { type NextPage } from "next";
import { SignInButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import { type RouterOutputs, api } from "~/utils/api";
import React from "react";
import Image from "next/image";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

const CreatePostWizard: React.FC = () => {
  const { user } = useUser();

  if (!user) {
    return null;
  }

  return (
    <div className="flex flex-grow items-center">
      <Image
        className="h-14 w-14 rounded-full"
        src={user.profileImageUrl}
        alt={user.username ?? "User image"}
        height={56}
        width={56}
      />

      <input
        type="text"
        className="flex-grow bg-transparent px-4 py-2 text-slate-300 placeholder:text-slate-500 focus:outline-none"
        placeholder="Emojis please..."
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;

  return (
    <li className="flex items-center gap-4 rounded-lg bg-slate-800 p-4 shadow-slate-800">
      <Image
        className="h-12 w-12 rounded-full"
        src={author.profileImageUrl}
        alt={author.username ?? "User image"}
        height={48}
        width={48}
      />
      <div>
        <div className="flex items-center gap-1 text-slate-400">
          <span>{`@${author.username}`}</span>
          <span className="text-sm">{`â€¢ ${dayjs(
            post.createdAt
          ).fromNow()}`}</span>
        </div>

        <p>{post.content}</p>
      </div>
    </li>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  const { data: posts, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) {
    return <div className="animate-pulse">Loading Posts</div>;
  }

  if (!posts) {
    return <div>No Posts Available</div>;
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full max-w-screen-md bg-slate-900">
          <div className="flex w-full bg-slate-800 p-4 shadow shadow-slate-800">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}

            {user.isSignedIn && <CreatePostWizard />}
          </div>
          <ul className="m-4 space-y-4">
            {posts.map(({ post, author }) => {
              return <PostView author={author} post={post} key={post.id} />;
            })}
          </ul>
        </div>
      </main>
    </>
  );
};

export default Home;
